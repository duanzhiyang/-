1.基础：
		所有的信息最终都表示为一个二进制的字符串，每一个二进制位（bit）有0和1两种状态。当我们需要把字符'A'存入计算机时，应该对应哪种状态呢，存储时，我们可以将
	字符'A'用01000010（这个随便编的）二进制字符串表示，存入计算机；读取时，再将01000010还原成字符'A'。那么问题来了，存储时，字符'A'应该对应哪一串二进制数呢，
	是01000010？或者是10000000 11110101？说白了，就是需要一个规则。这个规则可以将字符映射到唯一一种状态(二进制字符串)，这就是编码。而最早出现的编码规则就是ASCII编码，
	在ASCII编码规则中，字符'A'既不对应01000010，也不对应1000 0000 11110101，而是对应01000001。
	
2.常用编码
	2.1 ASCII
		由美国指定，一共规定了128个字符的编码，比如空格"SPACE"是32(十进制)（二进制00100000），大写的字母A是65(二进制为01000001)。这128个符号，之战用了一个字节(8bit)
	的后面7位，最前面的1位统一规定为0.总共猜有128个字符编码。
	2.2 ISO-8859-1
		扩展ASCII，对ASCII最高位为1时也进行编码。
	2.3 GB2312
		GB2312其对所收录字符进行了“分区处理”，共94个区，区从1(十进制)开始，一直到94(十进制)，每区含有94个位，位从1(十进制)开始，一直到94(十进制)，共8836(94*94)个码位，
	这种方式也称为区位码，GB2312是双字节编码，其中高字节表示区，低字节表示位。各区具体说明如下：
		01-09区收录除汉字外的682个字符有164个空位(9*94-682).
		10-15区为空白区，没有使用
		16-55区收录3755个一级汉字(简体)，按拼音排序。
		56-87区收录2008个二级汉字(简体)，按部首/比划排序。
		88-94区为空白区，没有使用。
		大致格式：     1 0 1 2 3 4 5 6 7 8 9       
					   0   x x x x x x x x x 
					   1 x x x x x x x x x x 
					   2 x x x x x x x x x x 
					   3 x x x x x x x x x x 
					   4 x x x x x x x x x x 
					   5 x x x x x x x x x x 
					   6 x x x x x x x x x x 
					   7 x x x x x x x x x x 
					   8 x x x x x x x x x x 
					   9 x x x x x 
		那么根据区位码怎么算出GBK2312编码呢，区位码表示范围为0101~9494.转化规则如下：
		1) 将区(十进制)转化为十六进制。
		2) 将转化的十六进制加上A0,得到GB2312编码的高字节
		3) 将位(十进制)转化为十六进制。
		4) 将转化的十六进制加上A0，得到GB2312的低字节。
		5) 组合区和位，区在高字节，位在低字节。
		6) 得到GB2312编码。
				例如：'李'字的区位码为3278（表示在32区，78位）。1. 将32（区）转化为十六进制为20。2. 加上A0为C0。3. 将78（位）转化为十六进制为4E。4. 加上A0为EE。
			5. 组合区和位，为C0EE。6. 得到GB2312编码，即'李'字的GB2312编码为C0EE。