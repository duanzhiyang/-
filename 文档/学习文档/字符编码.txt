1.基础：
		所有的信息最终都表示为一个二进制的字符串，每一个二进制位（bit）有0和1两种状态。当我们需要把字符'A'存入计算机时，应该对应哪种状态呢，存储时，我们可以将
	字符'A'用01000010（这个随便编的）二进制字符串表示，存入计算机；读取时，再将01000010还原成字符'A'。那么问题来了，存储时，字符'A'应该对应哪一串二进制数呢，
	是01000010？或者是10000000 11110101？说白了，就是需要一个规则。这个规则可以将字符映射到唯一一种状态(二进制字符串)，这就是编码。而最早出现的编码规则就是ASCII编码，
	在ASCII编码规则中，字符'A'既不对应01000010，也不对应1000 0000 11110101，而是对应01000001。
	
2.常用编码
	
	2.1 ASCII
		由美国指定，一共规定了128个字符的编码，比如空格"SPACE"是32(十进制)（二进制00100000），大写的字母A是65(二进制为01000001)。这128个符号，之战用了一个字节(8bit)
	的后面7位，最前面的1位统一规定为0.总共猜有128个字符编码。
	
	2.2 ISO-8859-1
		扩展ASCII，对ASCII最高位为1时也进行编码。
	
	2.3 GB2312
		GB2312其对所收录字符进行了“分区处理”，共94个区，区从1(十进制)开始，一直到94(十进制)，每区含有94个位，位从1(十进制)开始，一直到94(十进制)，共8836(94*94)个码位，
	这种方式也称为区位码，GB2312是双字节编码，其中高字节表示区，低字节表示位。各区具体说明如下：
		01-09区收录除汉字外的682个字符有164个空位(9*94-682).
		10-15区为空白区，没有使用
		16-55区收录3755个一级汉字(简体)，按拼音排序。
		56-87区收录2008个二级汉字(简体)，按部首/比划排序。
		88-94区为空白区，没有使用。
		大致格式：     1 0 1 2 3 4 5 6 7 8 9       
					   0   x x x x x x x x x 
					   1 x x x x x x x x x x 
					   2 x x x x x x x x x x 
					   3 x x x x x x x x x x 
					   4 x x x x x x x x x x 
					   5 x x x x x x x x x x 
					   6 x x x x x x x x x x 
					   7 x x x x x x x x x x 
					   8 x x x x x x x x x x 
					   9 x x x x x 
		那么根据区位码怎么算出GBK2312编码呢，区位码表示范围为0101~9494.转化规则如下：
		1) 将区(十进制)转化为十六进制。
		2) 将转化的十六进制加上A0,得到GB2312编码的高字节
		3) 将位(十进制)转化为十六进制。
		4) 将转化的十六进制加上A0，得到GB2312的低字节。
		5) 组合区和位，区在高字节，位在低字节。
		6) 得到GB2312编码。
				例如：'李'字的区位码为3278（表示在32区，78位）。1. 将32（区）转化为十六进制为20。2. 加上A0为C0。3. 将78（位）转化为十六进制为4E。4. 加上A0为EE。
			5. 组合区和位，为C0EE。6. 得到GB2312编码，即'李'字的GB2312编码为C0EE。
	
	2.4 BIG5，GB2312中有的汉字没有编码，所以有了GBK，讲GBK之前，了解一下BIG5.
		BIG5采用双字节编码，使用两个字节来表示一个字符。
	
	2.5 GBK编码扩展了GB2312，完全兼容GB2312编码 （如'李'字的GBK、GB2312编码均为C0EE），相比于GB2312，GBK编码了更多汉字。GBK依然采用双字节编码方案，其编码范围：
	8140-FEFE,剔除xx7F码位，共23940个码位。能表示21003个汉字。
	
	2.6 Unicode
		Unicode是指一张表，里面包含了可能出现的所有字符，每个字符对应一个数字，这个数字成为码点(Code point),如字符'H'的码点为72(十进制)，字符'李'的码点为26446
	(十进制)。Unicode表包含了1114112个码点，即从000000（十六进制） - 10FFFF（十六进制）。地球上所有字符都可以在Unicode表中找到对应的唯一码点。Unicode将码空间划
	分为17个平面，从00 - 10（十六进制，最高两位），即从0 - 16（十进制），每个平面有65536个码点（2^16），其中最重要的是第一个Unicode平面(码位从0000 - FFFF)，包含
	了最常用的字符，该平面被称为基本多语言平面（Basic Multilingual Plane），缩写为BMP，其他平面称为辅助平面(Supplementary Planes)，在基本多文种平面內， 从D800
	到DFFF之间的码位区段是永久保留不映射到字符的， 因此UTF-16编码巧妙的利用了这保留下来的码位来对辅助平面内的字符进行编码，这点后面进行讲解。Unicode只是一个符号集，
	只规定的字符所对应的码点，并没有指定如何存储，如何进行存储出现了不同的编码方案，关于Unicode编码方案主要有两条主线：UCS和UTF。UTF主线由Unicode Consortium进行维护
	管理，UCS主线由ISO/IEC进行维护管理。
	
	2.7 UTF
		
		2.7.1 UTF-8
			UTF-8是以中变长编码方式，使用1-4个字节进行编码。UTF-8完全兼容ASCII，对于ASCII中的字符，UTF-8采用的编码值跟ASCII完全一致。UTF-8是Unicode一种具体的编码实现。
		UTF-8是在互联网使用最广的一种Unicode编码规则，因为这种编码有利于节约网络流量(因为变长编码，而非统一长度编码)。关于Unicode码点如何转化为UTF-8编码，可参照如下
		规则：
			1)对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。
			2)对于n字节的符号（n>1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的unicode码。
			说明：字符'A'的Unicode码点为65（十进制），根据上表，在第一行范围，则字符'A'的UTF-8编码为01000001，中文字符'李'的Unicode码点为26446（十进制），二进制
			为01100111 01001110，十六进制为674E。根据上表，在第三行范围，则将'李'二进制代码从低位到高位依次填入x中，不足的填入0。得到UTF-8编码为
			11100110 10011101 10001110，即E69D8E（十六进制）。
			Unicode符号范围　　                 | 　　UTF-8编码方式
　　　　     (十六进制) (十进制)　　　　        | 　　（二进制）
　　----------------------------------------------------------------------------------------------------
			0000-0000 007F (0-127)           | 　　 0xxxxxxx
			0080-0000 07FF (128-2047)        | 　　 110xxxxx 10xxxxxx
			0800-0000 FFFF (2048-65535)      | 　   1110xxxx 10xxxxxx 10xxxxxx
			0000-0010 FFFF (65536-1114111)   | 　　 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
		
		
		
		
		
		
		
		
		
		
		
		
		
		